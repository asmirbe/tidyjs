{
  "name": "tidyjs",
  "displayName": "TidyJS",
  "description": "Automatically organizes and formats import declarations",
  "version": "1.3.4",
  "publisher": "Asmir",
  "license": "MIT",
  "icon": "media/small.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/asmirbe/tidyjs"
  },
  "author": {
    "name": "Asmir"
  },
  "engines": {
    "vscode": "^1.90.0"
  },
  "main": "./dist/extension.js",
  "categories": [
    "Formatters"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:javascript",
    "onLanguage:typescriptreact",
    "onLanguage:javascriptreact"
  ],
  "contributes": {
    "commands": [
      {
        "command": "extension.format",
        "title": "Format Imports",
        "category": "TidyJS"
      },
      {
        "command": "tidyjs.testValidation",
        "title": "Configuration validation",
        "category": "TidyJS"
      }
    ],
    "keybindings": [
      {
        "command": "extension.format",
        "key": "ctrl+alt+i",
        "mac": "cmd+alt+i",
        "when": "editorTextFocus"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "extension.format",
          "when": "resourceExtname =~ /\\.(ts|tsx|js|jsx)$/",
          "group": "1_modification"
        }
      ],
      "command-palette": [
        {
          "command": "extension.format"
        },
        {
          "command": "tidyjs.showStatus"
        },
        {
          "command": "tidyjs.reloadConfig"
        },
        {
          "command": "tidyjs.repairConfig"
        },
        {
          "command": "tidyjs.validateConfig"
        }
      ]
    },
    "configuration": {
      "title": "TidyJS",
      "properties": {
        "tidyjs.debug": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging"
        },
        "tidyjs.groups": {
          "type": "array",
          "default": [
            {
              "name": "Misc",
              "order": 0,
              "isDefault": true
            }
          ],
          "description": "Import groups configuration",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Group name"
              },
              "match": {
                "type": "string",
                "description": "Regex pattern to match imports (format: /pattern/flags or pattern)"
              },
              "order": {
                "type": "number",
                "description": "Group order (lower numbers appear first)"
              },
              "isDefault": {
                "type": "boolean",
                "default": false,
                "description": "Whether this group is the default for unmatched imports (only one group should have this set to true)"
              }
            },
            "required": [
              "name",
              "order"
            ]
          }
        },
        "tidyjs.importOrder": {
          "type": "object",
          "default": {
            "default": 0,
            "named": 1,
            "typeOnly": 2,
            "sideEffect": 3
          },
          "description": "Order of import types within each group",
          "properties": {
            "default": {
              "type": "number",
              "description": "Order for default imports"
            },
            "named": {
              "type": "number",
              "description": "Order for named imports"
            },
            "typeOnly": {
              "type": "number",
              "description": "Order for type-only imports"
            },
            "sideEffect": {
              "type": "number",
              "description": "Order for side-effect imports"
            }
          }
        },
        "tidyjs.format.onSave": {
          "type": "boolean",
          "default": false,
          "description": "Automatically format imports on file save"
        },
        "tidyjs.format.indent": {
          "type": "number",
          "default": 4,
          "description": "Number of spaces for indentation"
        },
        "tidyjs.format.removeUnused": {
          "type": "boolean",
          "default": false,
          "description": "Remove unused imports during formatting"
        },
        "tidyjs.format.singleQuote": {
          "type": "boolean",
          "default": true,
          "description": "Use single quotes for import paths"
        },
        "tidyjs.format.bracketSpacing": {
          "type": "boolean",
          "default": true,
          "description": "Add spaces inside import braces"
        },
        "tidyjs.patterns.appModules": {
          "type": "string",
          "default": "^@app\\/([a-zA-Z0-9_-]+)",
          "description": "Regex pattern to match application modules"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build-prod",
    "compile": "node scripts/build",
    "watch": "npm run compile -- --watch",
    "build": "vsce package",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "build-prod": "npm run check-types && npm run lint && node esbuild.js --production",
    "package": "node scripts/build -- --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit --project tsconfig.json",
    "lint": "eslint --config eslint.config.js src",
    "lint:fix": "eslint --config eslint.config.js src --fix",
    "bump": "sh ./bump.sh",
    "bump:patch": "sh ./bump.sh patch",
    "bump:minor": "sh ./bump.sh minor",
    "bump:major": "sh ./bump.sh major"
  },
  "devDependencies": {
    "@babel/generator": "^7.26.10",
    "@babel/parser": "^7.26.10",
    "@babel/traverse": "^7.26.10",
    "@babel/types": "^7.26.10",
    "@eslint/js": "^9.22.0",
    "@types/babel__generator": "^7.6.8",
    "@types/babel__traverse": "^7.20.6",
    "@types/jest": "^29.5.14",
    "@types/node": "~20.17.30",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@typescript-eslint/types": "^8.32.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.2.2",
    "esbuild": "^0.25.2",
    "esbuild-plugin-copy": "^2.1.1",
    "esbuild-plugin-output-reset": "^2.0.2",
    "eslint": "^9.21.0",
    "eslint-plugin-import": "^2.31.0",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "npm-run-all": "^4.1.5",
    "terser": "^5.39.0",
    "ts-jest": "^29.2.6",
    "typescript": "^5.8.2"
  },
  "pnpm": {
    "onlyBuiltDependencies": [
      "@vscode/vsce-sign",
      "esbuild",
      "keytar"
    ]
  },
  "dependencies": {
    "path-browserify": "^1.0.1",
    "typescript-eslint": "^8.32.1"
  }
}
