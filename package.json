{
  "name": "tidyimport",
  "displayName": "tidyimport",
  "description": "tidyimport est une extension VSCode qui organise et formate automatiquement vos déclarations d'import dans les fichiers TypeScript et JavaScript. Elle groupe vos imports par catégories personnalisables, aligne parfaitement les mots-clés 'from', et trie intelligemment vos imports selon leur type et leur longueur. Configurez facilement vos propres groupes d'imports et personnalisez l'espacement pour créer une structure d'imports cohérente et lisible pour vos projets.",
  "publisher": "asmirbelkic",
  "version": "0.0.10",
  "author": {
    "name": "Asmir BELKIC",
    "repository": "https://github.com/asmirbe/tidyimport"
  },
  "engines": {
    "vscode": "^1.90.0"
  },
  "main": "./dist/extension.js",
  "categories": [
    "Formatters"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:javascript",
    "onLanguage:typescriptreact",
    "onLanguage:javascriptreact"
  ],
  "contributes": {
    "commands": [
      {
        "command": "extension.formatImports",
        "title": "Format Imports"
      }
    ],
    "keybindings": [
      {
        "command": "extension.formatImports",
        "key": "ctrl+shift+i",
        "mac": "cmd+shift+i",
        "when": "editorTextFocus && !editorReadonly && (editorLangId == 'typescript' || editorLangId == 'javascript' || editorLangId == 'typescriptreact' || editorLangId == 'javascriptreact')"
      }
    ],
    "configuration": {
      "title": "TidyImport",
      "properties": {
        "tidyimport.groups": {
          "type": "array",
          "default": [
            {
              "name": "Misc",
              "regex": "^(react|lodash|date-fns)$",
              "order": 0
            },
            {
              "name": "DS",
              "regex": "^ds$",
              "order": 1
            },
            {
              "name": "@app/dossier",
              "regex": "^@app\\/dossier",
              "order": 2
            },
            {
              "name": "@core",
              "regex": "^@core",
              "order": 3
            },
            {
              "name": "@library",
              "regex": "^@library",
              "order": 4
            },
            {
              "name": "Utils",
              "regex": "^yutils",
              "order": 5
            }
          ],
          "description": "Define import groups, their regex matchers, and ordering"
        },
        "tidyimport.alignmentSpacing": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "description": "Number of spaces to add when aligning 'from' keywords in imports"
        },
        "tidyimport.formatOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Automatically format imports when saving a file"
        },
        "tidyimport.maxLineLength": {
          "type": "number",
          "default": 150,
          "minimum": 80,
          "description": "Maximum line length for import statements. Imports exceeding this length will be split into multiple lines."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build-prod",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "build-prod": "npm run check-types && npm run lint && node esbuild.js --production",
    "generate:publish": "npm test && yes | vsce package --allow-missing-repository",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit --project tsconfig.json",
    "lint": "eslint --config eslint.config.mjs src",
    "lint:fix": "eslint --config eslint.config.mjs src --fix",
    "bump": "sh ./bump.sh",
    "test": "node ./test/runTest.js",
    
    "labs:build": "node esbuild.labs.js",
    "labs:build-prod": "node esbuild.labs.js --production",
    "labs:watch": "node esbuild.labs.js --watch",
    "labs:run": "node out/labs/parser/index.js",
    "labs:check-types": "tsc --noEmit --project tsconfig.labs.json",
    "labs:lint": "eslint --config eslint.labs.config.mjs labs",
    "labs:lint:fix": "eslint --config eslint.labs.config.mjs labs --fix",
    "labs:dev": "npm-run-all -p labs:watch labs:lint",
    "labs:compile": "npm run labs:check-types && npm run labs:lint && npm run labs:build",
    "labs:test": "ts-node ./labs/parser/test/runTest.ts"
  },
  "devDependencies": {
    "@eslint/js": "^9.22.0",
    "@types/babel__generator": "^7.6.8",
    "@types/babel__traverse": "^7.20.6",
    "@types/node": "20.x",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.25.0",
    "esbuild-plugin-copy": "^2.1.1",
    "eslint": "^9.21.0",
    "eslint-plugin-import": "^2.31.0",
    "jest": "^29.7.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.2",
    "@babel/generator": "^7.26.10",
    "@babel/parser": "^7.26.10",
    "@babel/traverse": "^7.26.10",
    "@babel/types": "^7.26.10",
    "@vscode/vsce": "^3.2.2"
  }
}
