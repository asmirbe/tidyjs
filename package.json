{
  "name": "tidyjs",
  "displayName": "TidyJS",
  "description": "Automatically organizes and formats import declarations",
  "version": "1.4.2",
  "publisher": "Asmir",
  "license": "MIT",
  "icon": "resources/small.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/asmirbe/tidyjs"
  },
  "author": {
    "name": "Asmir"
  },
  "engines": {
    "vscode": "^1.90.0"
  },
  "main": "./dist/extension.js",
  "categories": [
    "Formatters"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:javascript",
    "onLanguage:typescriptreact",
    "onLanguage:javascriptreact"
  ],
  "contributes": {
    "commands": [
      {
        "command": "extension.format",
        "title": "Format Imports",
        "category": "TidyJS"
      }
    ],
    "keybindings": [
      {
        "command": "extension.format",
        "key": "ctrl+alt+i",
        "mac": "cmd+alt+i",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "TidyJS",
      "properties": {
        "tidyjs.debug": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging"
        },
        "tidyjs.groups": {
          "type": "array",
          "default": [
            {
              "name": "Misc",
              "order": 0,
              "isDefault": true
            }
          ],
          "description": "Import groups configuration",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Group name"
              },
              "match": {
                "type": "string",
                "description": "Regex pattern to match imports (format: /pattern/flags or pattern)"
              },
              "order": {
                "type": "number",
                "description": "Group order (lower numbers appear first)"
              },
              "isDefault": {
                "type": "boolean",
                "default": false,
                "description": "Whether this group is the default for unmatched imports (only one group should have this set to true)"
              },
              "sortOrder": {
                "description": "Custom sort order for imports within this group",
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "alphabetic"
                    ],
                    "description": "Sort imports alphabetically"
                  },
                  {
                    "type": "array",
                    "description": "Custom sort order with patterns (supports wildcards like 'react-*', '@app/*', '*test*')",
                    "items": {
                      "type": "string",
                      "description": "Import pattern (exact match or wildcard pattern)"
                    },
                    "examples": [
                      [
                        "react",
                        "react-*",
                        "lodash"
                      ]
                    ]
                  }
                ]
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "tidyjs.format.removeUnusedImports": {
          "type": "boolean",
          "default": false,
          "description": "Remove unused imports during formatting"
        },
        "tidyjs.format.removeMissingModules": {
          "type": "boolean",
          "default": false,
          "description": "Remove imports for modules that are not installed"
        },
        "tidyjs.excludedFolders": {
          "type": "array",
          "default": [],
          "description": "List of folder paths where import formatting should be disabled",
          "items": {
            "type": "string",
            "description": "Folder path relative to workspace root (e.g., 'node_modules', 'dist', 'build')"
          }
        },
        "tidyjs.pathResolution.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable automatic path resolution for imports"
        },
        "tidyjs.pathResolution.mode": {
          "type": "string",
          "enum": [
            "relative",
            "absolute"
          ],
          "default": "relative",
          "description": "Convert imports to relative or absolute (with aliases) paths"
        },
        "tidyjs.pathResolution.preferredAliases": {
          "type": "array",
          "default": [],
          "description": "Preferred aliases to use when converting to absolute paths",
          "items": {
            "type": "string",
            "description": "Alias pattern (e.g., '@components', '@utils', '@/*')"
          }
        }
      }
    }
  },
  "scripts": {
    "dev": "npm run watch",
    "watch": "node scripts/build.js --watch",
    "compile": "node scripts/build",
    "check": "npm run check-types && npm run lint && npm run test",
    "check-types": "tsc --noEmit --project tsconfig.json",
    "lint": "eslint --config eslint.config.mjs src test/parser jest.config.js",
    "lint:fix": "eslint --config eslint.config.mjs src test/parser jest.config.js --fix",
    "test": "jest --config jest.config.js",
    "test:watch": "jest --watch --config jest.config.js",
    "test:unit": "jest --config jest.config.js",
    "test:e2e": "npm run compile && npm run compile-e2e && node ./out/test/e2e/test/e2e/runTest",
    "test:e2e:verbose": "npm run compile && npm run compile-e2e && VERBOSE=true node ./out/test/e2e/test/e2e/runTest",
    "test:e2e:fast": "npm run compile-e2e && node ./out/test/e2e/test/e2e/runTest",
    "compile-e2e": "tsc -p ./test/e2e/tsconfig.json",
    "release:patch": "npm run check && npm run bump:patch && npm run build",
    "release:minor": "npm run check && npm run bump:minor && npm run build",
    "release:major": "npm run check && npm run bump:major && npm run build",
    "bump:patch": "sh ./scripts/bump.sh patch",
    "bump:minor": "sh ./scripts/bump.sh minor",
    "bump:major": "sh ./scripts/bump.sh major",
    "build": "npm run build-prod && vsce package",
    "build-prod": "node scripts/build.js --production",
    "package": "vsce package",
    "vscode:prepublish": "npm run build-prod",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "compile-tests": "tsc -p . --outDir out"
  },
  "devDependencies": {
    "@babel/parser": "^7.26.10",
    "@types/jest": "^30.0.0",
    "@types/lodash": "^4.17.20",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.0.15",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@typescript-eslint/types": "^8.32.1",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.2.2",
    "esbuild": "^0.25.2",
    "eslint": "^9.21.0",
    "glob": "^11.0.2",
    "jest": "^29.7.0",
    "lodash": "^4.17.21",
    "mocha": "^11.7.1",
    "ts-jest": "^29.2.6",
    "typescript": "^5.8.2",
    "typescript-eslint": "^8.37.0"
  }
}